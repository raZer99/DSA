Kadane's Algorithm ( Arrays )
Link : https://www.geeksforgeeks.org/problems/kadanes-algorithm-1587115620/1

Brute Force : 
class Solution{
    public:
    // arr: input array
    // n: size of array
    //Function to find the sum of contiguous subarray with maximum sum.
    long long maxSubarraySum(int arr[], int n){
        int res = INT_MIN;
        int sum;
        for(int i=0;i<n;i++){
            for(int j=i;j<n;j++){
                sum = 0;
                for(int k=i;k<=j;k++){
                    sum+=arr[k];
                }
                res = max(sum,res);
            }
        }
        return res;
        
    }
};

Optimal :
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        //This question is based on Kadane's algorithm
        int res = INT_MIN;
        int sum = 0;
        for(int i=0;i<nums.size();i++){
            sum += nums[i];
            if(sum>res){
                res = sum;
            }
            if(sum<0){
                sum = 0;
            }
        }
        return res;
    }
};
